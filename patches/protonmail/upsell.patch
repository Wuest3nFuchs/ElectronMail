diff --git a/applications/mail/src/app/components/list/banners/auto-delete/variations/AutoDeleteFreeBanner.tsx b/applications/mail/src/app/components/list/banners/auto-delete/variations/AutoDeleteFreeBanner.tsx
index 5daa32c0a6..6314fc5668 100644
--- a/applications/mail/src/app/components/list/banners/auto-delete/variations/AutoDeleteFreeBanner.tsx
+++ b/applications/mail/src/app/components/list/banners/auto-delete/variations/AutoDeleteFreeBanner.tsx
@@ -4,6 +4,10 @@ import { Button } from '@proton/atoms';
 import { AutoDeleteUpsellModal, PromotionBanner, useModalState } from '@proton/components';

 const AutoDeleteFreeBanner = () => {
+    if (___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___) {
+        return null;
+    }
+
     const [upsellModalProps, toggleUpsellModal, renderUpsellModal] = useModalState();

     return (

diff --git a/applications/mail/src/app/hooks/useShowUpsellBanner.ts b/applications/mail/src/app/hooks/useShowUpsellBanner.ts
index b82b7ae976..0907c85ec6 100644
--- a/applications/mail/src/app/hooks/useShowUpsellBanner.ts
+++ b/applications/mail/src/app/hooks/useShowUpsellBanner.ts
@@ -33,12 +33,14 @@ const useShowUpsellBanner = (labelID: string) => {
     - No other banner is shown in the message list
     - If a value is found in the localStorage that should trigger a new display
      */
+    /* <electron-mail-mark> */
     const canDisplayUpsellBanner =
         user.isFree &&
         Date.now() > threeDaysAfterCreationDate &&
         isInbox &&
         needToShowUpsellBanner.current &&
         showAgain;
+    /* </electron-mail-mark> */

     const handleDismissBanner = () => {
         // Set the ref to false so that we hide the banner and update the localStorage value
@@ -71,6 +73,10 @@ const useShowUpsellBanner = (labelID: string) => {
         }
     }, []);

+    if (___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___) {
+        return { canDisplayUpsellBanner: false, needToShowUpsellBanner, handleDismissBanner };
+    }
+
     return { canDisplayUpsellBanner, needToShowUpsellBanner, handleDismissBanner };
 };

diff --git a/packages/components/components/topnavbar/TopNavbarUpsell.tsx b/packages/components/components/topnavbar/TopNavbarUpsell.tsx
index caa1609454..723bf63519 100644
--- a/packages/components/components/topnavbar/TopNavbarUpsell.tsx
+++ b/packages/components/components/topnavbar/TopNavbarUpsell.tsx
@@ -22,6 +22,7 @@ const LazyTopNavbarUpsellInner = lazy(
 );
 
 const TopNavbarUpsell = ({ app, offerProps }: Props) => {
+    if (___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___) return null;
     const [subscription] = useSubscription();
     const [organization] = useOrganization();
     const [userSettings, loadingUserSettings] = useUserSettings();

diff --git a/applications/drive/src/app/components/layout/sidebar/SidebarStorageUpsell.tsx b/applications/drive/src/app/components/layout/sidebar/SidebarStorageUpsell.tsx
index 5ccea7c08b..5594e868cc 100644
--- a/applications/drive/src/app/components/layout/sidebar/SidebarStorageUpsell.tsx
+++ b/applications/drive/src/app/components/layout/sidebar/SidebarStorageUpsell.tsx
@@ -128,6 +128,7 @@ const getStorageUpsell = ({ app, user }: { app: APP_NAMES; user: UserModel }) =>
 };
 
 const SidebarStorageUpsell = ({ app, storageRef }: Props) => {
+    if (___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___) return null;
     const [user] = useUser();
     const [subscription] = useSubscription();
     const [ignoreStorageLimit, setIgnoreStorageLimit] = useLocalState(false, `${IGNORE_STORAGE_LIMIT_KEY}${user.ID}`);

diff --git a/packages/components/containers/payments/subscription/YourStorageSection.tsx b/packages/components/containers/payments/subscription/YourStorageSection.tsx
index 6b7b1dea34..6de753cb1f 100644
--- a/packages/components/containers/payments/subscription/YourStorageSection.tsx
+++ b/packages/components/containers/payments/subscription/YourStorageSection.tsx
@@ -151,6 +151,7 @@ const YourStorageSection = ({ app }: Props) => {
     return (
         <SettingsSection>
             {(() => {
+                if (___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___) return null;
                 const data = (() => {
                     if (details.drive.type === SpaceState.Danger && details.base.type === SpaceState.Danger) {
                         return {

diff --git a/applications/mail/src/app/components/list/tip/useTips.tsx b/applications/mail/src/app/components/list/tip/useTips.tsx
index 9ef794f6ff..040b1e6fbb 100644
--- a/applications/mail/src/app/components/list/tip/useTips.tsx
+++ b/applications/mail/src/app/components/list/tip/useTips.tsx
@@ -247,7 +247,7 @@ const useTips = () => {
                 ),
                 action: TipActionType.EnableDarkWebMonitoring,
             },
-            {
+            ...(___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___ ? [] : [{
                 id: 10,
                 icon: 'brand-proton-drive',
                 message: c('Info')
@@ -264,8 +264,8 @@ const useTips = () => {
                     </Href>
                 ),
                 action: TipActionType.OpenProtonDrive,
-            },
-            {
+            }]),
+            ...(___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___ ? [] : [{
                 id: 11,
                 icon: 'brand-proton-pass',
                 message: c('Info')
@@ -282,8 +282,8 @@ const useTips = () => {
                     </Href>
                 ),
                 action: TipActionType.OpenProtonPass,
-            },
-            {
+            }]),
+            ...(___ELECTRON_MAIL_PROTON_SUPPRESS_UPSELL_ADS_PLACEHOLDER___ ? [] : [{
                 id: 12,
                 icon: 'brand-proton-vpn',
                 message: c('Info')
@@ -300,7 +300,7 @@ const useTips = () => {
                     </Href>
                 ),
                 action: TipActionType.DownloadProtonVPN,
-            },
+            }]),
         ],
         []
     );
