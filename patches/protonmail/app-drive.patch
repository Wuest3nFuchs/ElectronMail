diff --git a/package.json b/package.json
index 0195dc8bea..949d07c41e 100644
--- a/package.json
+++ b/package.json
@@ -3,7 +3,7 @@
     "private": true,
     "license": "GPL-3.0",
     "workspaces": [
-        "applications/*",
+        "applications/drive",
         "applications/pass-desktop/native",
         "packages/*",
         "packages/wasm/*",
@@ -60,4 +60,4 @@
     "publishConfig": {
         "registry": "https://nexus.protontech.ch/repository/web-npm/"
     }
-}
+}
\ No newline at end of file
--

diff --git a/applications/drive/package.json b/applications/drive/package.json
index bd3022cc9d..921ca7e9f5 100644
--- a/applications/drive/package.json
+++ b/applications/drive/package.json
@@ -7,7 +7,6 @@
     "main": "index.ts",
     "scripts": {
         "analyze": "yarn build:web --analyze",
-        "build:web": "cross-env NODE_ENV=production TS_NODE_PROJECT=\"../../tsconfig.webpack.json\" proton-pack build --webpackOnCaffeine --appMode=sso --handleSupportAndErrors --optimizeAssets",
         "check-types": "tsc",
         "i18n:extract:local": "yarn workspace @proton/i18n build && yarn build:web && proton-i18n extract",
         "i18n:extract:web": "proton-i18n extract",

diff --git a/applications/drive/src/app/index.tsx b/applications/drive/src/app/index.tsx
index 4d03c64db1..0e5766fcfe 100644
--- a/applications/drive/src/app/index.tsx
+++ b/applications/drive/src/app/index.tsx
@@ -9,6 +9,8 @@ import App from './App';
 import './style';
 import { initializePerformanceMetrics } from './utils/performance';
 
+window.sessionStorage.setItem("electron_mail:proton_app_name", "proton-drive");
+
 initializePerformanceMetrics(false);
 
 ReactDOM.render(<App />, document.querySelector('.app-root'));

diff --git a/applications/drive/src/.htaccess b/applications/drive/src/.htaccess
index b0b25a5fae..11d4e4af0f 100644
--- a/applications/drive/src/.htaccess
+++ b/applications/drive/src/.htaccess
@@ -40,10 +40,12 @@ ErrorDocument 404 /assets/404.html
 </Files>

 # The download service worker gets chunk hash appended to the end of the filename
+# <electron-mail-mark>
 <Files ~ "^downloadSW">
   Header set Service-Worker-Allowed "/"
   Header set Service-Worker "script"
 </Files>
+# </electron-mail-mark>

 <IfModule mod_deflate.c>
   AddOutputFilter INCLUDES;DEFLATE svg

diff --git a/applications/drive/src/app/store/_downloads/fileSaver/download.ts b/applications/drive/src/app/store/_downloads/fileSaver/download.ts
index f09b5a83bb..e0de2cb455 100644
--- a/applications/drive/src/app/store/_downloads/fileSaver/download.ts
+++ b/applications/drive/src/app/store/_downloads/fileSaver/download.ts
@@ -6,9 +6,11 @@ import type { TransferMeta } from '../../../components/TransferManager/transfer'
 
 let workerWakeupInterval: ReturnType<typeof setInterval>;
 
+// <electron-mail-mark>
 export const isServiceWorkersSupported = () => {
     return 'serviceWorker' in navigator;
 };
+// </electron-mail-mark>
 
 export const isOPFSSupported = async () => {
     // Get the OPFS root directory
@@ -72,11 +74,12 @@ function serviceWorkerKeepAlive() {
     }, 10000);
 }
 
+// <electron-mail-mark>
 export async function initDownloadSW() {
     // wait Service Worker is registered
     await navigator.serviceWorker.register(
-        /* webpackChunkName: "downloadSW" */
-        new URL('./downloadSW', import.meta.url),
+        /* webpackChunkName: "downloadSW" */ // electron-mail-mark
+        new URL('./downloadSW', import.meta.url), // electron-mail-mark
         {
             scope: `/${stripLeadingAndTrailingSlash(PUBLIC_PATH)}`,
         }
@@ -94,6 +97,7 @@ export async function initDownloadSW() {
 
     serviceWorkerKeepAlive();
 }
+// </electron-mail-mark>
 
 /**
  * Opens download stream into service worker. Use abort signal when pipeTo can't close the download stream.

diff --git a/packages/drive-store/store/_downloads/fileSaver/download.ts b/packages/drive-store/store/_downloads/fileSaver/download.ts
index 1db1b7ca29..a7e6e460fd 100644
--- a/packages/drive-store/store/_downloads/fileSaver/download.ts
+++ b/packages/drive-store/store/_downloads/fileSaver/download.ts
@@ -5,9 +5,11 @@ import type { TransferMeta } from '../../../components/TransferManager/transfer'
 
 let workerWakeupInterval: ReturnType<typeof setInterval>;
 
+// <electron-mail-mark>
 export const isServiceWorkersUnsupported = () => {
     return !('serviceWorker' in navigator);
 };
+// </electron-mail-mark>
 
 // createDownloadIframe opens download URL created in service worker to
 // initialize the download in the browser. The response has headers to
@@ -55,11 +57,12 @@ function serviceWorkerKeepAlive() {
     }, 10000);
 }
 
+// <electron-mail-mark>
 export async function initDownloadSW() {
     // wait Service Worker is registered
     await navigator.serviceWorker.register(
         /* webpackChunkName: "downloadSW" */
-        new URL('./downloadSW', import.meta.url),
+        new URL('./downloadSW', import.meta.url), // electron-mail-mark
         {
             scope: `/${stripLeadingAndTrailingSlash(PUBLIC_PATH)}`,
         }
@@ -77,6 +80,7 @@ export async function initDownloadSW() {
 
     serviceWorkerKeepAlive();
 }
+// </electron-mail-mark>
 
 /**
  * Opens download stream into service worker. Use abort signal when pipeTo can't close the download stream.
--

diff --git a/applications/drive/src/app/store/_shares/shareUrl.ts b/applications/drive/src/app/store/_shares/shareUrl.ts
index 1b76b8ea81..748ede869b 100644
--- a/applications/drive/src/app/store/_shares/shareUrl.ts
+++ b/applications/drive/src/app/store/_shares/shareUrl.ts
@@ -43,5 +43,9 @@ export const getSharedLink = (sharedURL?: {
     const url = sharedURL.publicUrl
         ? replaceLocalURL(sharedURL.publicUrl)
         : getAppHref(`/urls/${sharedURL.token}`, APPS.PROTONDRIVE);
-    return `${url}${generatedPassword !== '' ? `#${generatedPassword}` : ''}`;
+    const resultUrl = `${url}${generatedPassword !== '' ? `#${generatedPassword}` : ''}`;
+    return new URL(
+        new URL(resultUrl).href.substring(new URL(resultUrl).origin.length),
+        "https://drive.proton.me",
+    ).toString();
 };
--
